podTemplate(label: 'mypod',
    volumes: [
        hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
		hostPathVolume(hostPath: '/home/jenkins/', mountPath: '/mnt'),
		secretVolume(secretName: 'icpadmin', mountPath: '/var/run/secrets/registry-account'),
        configMapVolume(configMapName: 'icpconfig', mountPath: '/var/run/configs/registry-config')
    ],
    containers: [
        containerTemplate(name: 'kubectl', image: 'ibmcloudacademy/k8s-icp:v1.0', ttyEnabled: true, command: 'cat'),
  ]) {

    node('mypod') {
        checkout scm
        container('kubectl') {
            stage('Deploy new Docker Image') {
                sh """
                #!/bin/bash
                set +e
                NAMESPACE=`cat /var/run/configs/registry-config/namespace`
                REGISTRY=`cat /var/run/configs/registry-config/registry`
				DOCKER_USER=`cat /var/run/secrets/registry-account/username`
				DOCKER_PASSWORD=`cat /var/run/secrets/registry-account/password`
				
				
                wget --no-check-certificate https://10.99.201.116:8443/api/cli/icp-linux-amd64
                bx plugin install icp-linux-amd64
                # helm init --client-only
                bx pr login -a https://10.99.201.116:8443 --skip-ssl-validation -u \${DOCKER_USER} -p \${DOCKER_PASSWORD} -c id-mycluster-account
                bx pr cluster-config mycluster
				pwd
				cd /home
				mkdir jenkins
				cd jenkins
				mkdir .helm
				cd .helm
				pwd
				cd /mnt
				ls
				cp /mnt/cert.pem /home/jenkins/.helm/cert.pem
				cat cert.pem
				cp /mnt/key.pem /home/jenkins/.helm/key.pem
				cat key.pem
				pwd
				ls -l
			cd /home/jenkins/workspace/test/charts
		        helm install --tls --set image.pullSecret="" --set service.name=sampleweb --set ingress.path="/sample" -n sampleapp web
                """
            }
        }
    }
}
